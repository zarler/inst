<?php
defined('SYSPATH') or die('No direct script access.');

/**
 * Created by PhpStorm.
 * Permission: majin
 * Date: 15/12/24
 * Time: 上午10:33
 *
 * 用户组管理
 *
 */
class Controller_Admin_Group extends AdminController {

    //权限映射
    var $permission_array = array(
        'map' => array(
            'List' => array('Index', 'Add', 'Edit', 'Delete')
        )
    );

    var $permission_group = array();


    public function before() {
        parent::before(); // TODO: Change the autogenerated stub
        $this->permission_group = Model::factory('Admin_Permission')->getGroupAll();
    }


    public function action_Index() {
        $this->action_List();
    }


    //列表
    public function action_List() {

        $page = isset($this->get['page']) ? intval($this->get['page']) : 1;
        $perpage = isset($this->get['pagesize']) ? intval($this->get['pagesize']) : 20;
        $array = array();

        $total = Model::factory('Admin_Group')->getTotal($array);
        $pagination = Pagination::factory(
            array(
                'total_items' => $total,
                'items_per_page' => $perpage,
            ));
        $list = Model::factory('Admin_Group')->getList($array, $perpage, $page);

        Template::factory('Admin/Group/List', array(
                'list' => $list,
                'permission_group' => $this->permission_group,
                'pagination' => $pagination,
            )
        )->response();

    }


    //添加
    public function action_Add() {
        $message = NULL;
        if (isset($this->post['submit'])) {
            if ($this->post['name']) {
                $pi = $this->post['permission_item'];
                foreach ($pi as $k => $v) {
                    foreach ($v as $k1 => $v1) {
                        if ($v1 == 0) {
                            unset($pi[$k][$k1]);
                        }
                    }
                }

                $add = Model::factory('Admin_Group')->create(array(
                    'name' => $this->post['name'],
                    'description' => $this->post['description'],
                    'permission' => json_encode($pi),
                ));
                if ($add) {
                    $message = array('type' => 'success', 'message' => '添加成功.');
                } else {
                    $message = array('type' => 'error', 'message' => '添加失败.');
                }
            } else {
                $message = array('type' => 'error', 'message' => '添加失败,请查看是否有必填信息未填.');
            }
        }

        $group_permission_array = Model::factory('Admin_Permission')->getGroupPermissionArray();


        Template::factory('Admin/Group/Add', array(
                'message' => $message,
                'permission_group' => $this->permission_group,
                'group_permission_array' => $group_permission_array,
            ))->response();


    }


        //修改
        public function action_Edit() {
            $message = NULL;
            $id = isset($this->get['id']) ? intval($this->get['id']) : 0;
            $data = Model::factory('Admin_Group')->getOne($id);
            if (!$data) {
                Template::factory()->message(
                    array(
                        'type' => 'error',
                        'title' => '信息不存在',
                        'message' => '信息不存在或已经被删除.',
                        'back' => TRUE,)
                );
            }

            if (isset($this->post['submit'])) {
                if ($this->post['name']) {
                        $pi = $this->post['permission_item'];
                        foreach ($pi as $k => $v) {
                            foreach ($v as $k1 => $v1) {
                                if ($v1 == 0) {
                                    unset($pi[$k][$k1]);
                                }
                            }
                        }
                    $edit = Model::factory('Admin_Group')->update($id, array(
                        'name' => $this->post['name'],
                        'description' => $this->post['description'],
                        'permission' => json_encode($pi),

                    ));
                    if ($edit) {
                        $message = array('type' => 'success', 'message' => '更新成功.');
                        $data = Model::factory('Admin_Group')->getOne($id);//更新输出数据
                    } else {
                        $message = array('type' => 'error', 'message' => '更改失败,数据异常.');
                    }
                } else {
                    $message = array('type' => 'error', 'message' => '更改失败,请查看是否有必填信息未填.');
                }
            }

            $group_permission_array = Model::factory('Admin_Permission')->getGroupPermissionArray();
            $data['permission'] = json_decode($data['permission'],TRUE);
            Template::factory('Admin/Group/Edit', array(
                'message' => $message,
                'permission_group' => $this->permission_group,
                'group_permission_array' => $group_permission_array,
                'data' => $data,
            ))->response();
        }

        public function action_Delete() {
            $message = NULL;
            $id = isset($this->get['id']) ? intval($this->get['id']) : 0;
            $rs = Model::factory('Admin_Group')->getOne($id);
            if (!$rs) {
                Template::factory()->message(
                    array(
                        'type' => 'error',
                        'title' => '信息不存在',
                        'message' => '信息不存在或已经被删除.',
                        'back' => TRUE,)
                );
            }
            $del = Model::factory('Admin_Group')->delete($id);
            if ($del) {
                Template::factory()->message(
                    array(
                        'type' => 'success',
                        'title' => '删除成功',
                        'message' => '管理员组:' . $rs['name'] . ' 被成功删除.',
                        'redirect' => $this->request->referrer() ? $this->request->referrer() : '/' . $this->controller . '/List',
                        'redirect_time' => 3,
                        'back' => FALSE)
                );
            }
            Template::factory()->message(
                array(
                    'type' => 'error',
                    'title' => '删除失败',
                    'message' => '管理员组:' . $rs['name'] . ' 删除未成功,请核实或联系技术人员处理.',
                    'back' => TRUE,)
            );
        }




    }