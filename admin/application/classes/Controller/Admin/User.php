<?php
defined('SYSPATH') or die('No direct script access.');
/**
 * Created by PhpStorm.
 * User: majin
 * Date: 15/12/24
 * Time: 上午10:18
 */

class Controller_Admin_User extends AdminController {

    var $permission_array =array(
        'map'=> array(
            'List' => array('Index','Add','Edit','Delete')
        )
    );

    var $user_group = array();

    public function before() {
        parent::before(); // TODO: Change the autogenerated stub
        $this->user_group = Model::factory('Admin_Group')->getAll();
    }

    public function action_Index() {
        $this->action_List();
    }

    public function action_List() {


        $page = isset($this->get['page']) ? intval($this->get['page']) : 1;
        $perpage = isset($this->get['pagesize']) ? intval($this->get['pagesize']) : 20;


        $array = array();
        if(isset($this->get['group_id'])) {
            $array['group_id'] = intval($this->get['group_id']);
        }

        if(isset($this->get['status'])) {
            $array['status'] = $this->get['status'];
        }


        if(isset($this->get['username'])) {
            $array['username'] = $this->get['username'];
        }

        if(isset($this->get['email'])) {
            $array['email'] = $this->get['email'];
        }

        if(isset($this->get['name'])) {
            $array['name'] = trim($this->get['name']);
        }

        if(isset($this->get['department'])) {
            $array['department'] = trim($this->get['department']);
        }


        $total = Model::factory('Admin_User')->getTotal($array);

        $pagination = Pagination::factory(
            array(
                'total_items' => $total,
                'items_per_page' => $perpage,
            ));

        $list = Model::factory('Admin_User')->getList($array, $perpage, $page);

        foreach($list as $k=>$v) {
            $list[$k]['user_group'] = Model::factory('Admin_Group')->getByUserId($v['id']);
        }


        Template::factory('Admin/User/List', array(
                'list' => $list,
                'sessionid' => Model::factory('Admin')->getUserSessArray()['id'],
                'user_group' => $this->user_group,
                'pagination' => $pagination,
            )
        )->response();

    }


    //添加
    public function action_Add() {
        $message = NULL;

        $data['group_id'] = isset($this->get['group_id']) ? intval($this->get['group_id']):0;

        if(isset($this->post['submit'])) {

            $valid = Validation::factory($this->post)
                ->rule('username','not_empty')
                ->rule('username','min_length',array(':value',3))
                ->rule('password','not_empty')
                ->rule('password','min_length',array(':value',6))
                ->rule('email','not_empty')
                ->rule('email','email')
                ->rule('group_id','not_empty');


            if($valid->check()) {
                $new_id = Model::factory('Admin_User')->create(array(
                    'username'=>$this->post['username'],
                    'email'=>$this->post['email'],
                    'password'=>$this->post['password'],
                    'name'=>$this->post['name'],
                    'number'=>$this->post['number'],
                    'status'=>$this->post['status'],
                    'mobile'=>$this->post['mobile'],
                    'phone'=>$this->post['phone'],
                    'department'=>$this->post['department'],
                    'job'=>$this->post['job'],
                    'description'=>$this->post['description'],
                ));

                if($new_id) {
                    $group_id = array();
                    $groups = array();
                    foreach($this->user_group as $g){
                        $groups[$g['id']] =$g ;
                    }
                    foreach($this->post['group_id'] as $g){
                        if(isset($groups[$g])) {//必须存在的组id
                            $group_id[] = intval($g);
                        }
                    }
                    Model::factory('Admin_Group')->setGroupLink($new_id,$group_id);

                    $message = array('type' => 'success', 'message' => '添加成功.');
                }else {
                    $message = array('type' => 'error', 'message' => '添加失败.');
                }
            }else {
                $message = array('type' => 'error', 'message' => '添加失败,请查看是否有必填信息未填.');
            }
        }

        Template::factory('Admin/User/Add',array(
            'message'=>$message,
            'user_group'=>$this->user_group,
            'data'=>$data
        ))->response();
    }

    //更改
    public function action_Edit() {


        $message = NULL;
        $id = isset($this->get['id']) ? intval($this->get['id']):0;
        $data  = Model::factory('Admin_User')->getOne($id);

        if(!$data){
            Template::factory()->message(
                array(
                    'type'=>'error',
                    'title'=>'信息不存在',
                    'message'=>'信息不存在或已经被删除.',
                    'back'=>TRUE,)
            );
        }
        if(isset($this->post['submit'])) {
            $valid = Validation::factory($this->post)
                ->rule('username','not_empty')
                ->rule('username','min_length',array(':value',3))
                ->rule('email','not_empty')
                ->rule('email','email')
                ->rule('group_id','not_empty');

            if($valid->check()) {
                if(trim($this->post['username'])!=$data['username']){
                    $res=Model::factory('Admin_User')->checkUserName(trim($this->post['username']));
                    if($res){ //用户名重复
                        Template::factory()->message(
                            array(
                                'type'=>'error',
                                'title'=>'用户名重复',
                                'message'=>'修改失败,用户名重复.',
                                'back'=>TRUE,)
                        );
                    }
                }
                $update_array = array(
                    'username'=>$this->post['username'],
                    'email'=>$this->post['email'],
                    'name'=>$this->post['name'],
                    'number'=>$this->post['number'],
                    'status'=>$this->post['status'],
                    'mobile'=>$this->post['mobile'],
                    'phone'=>$this->post['phone'],
                    'department'=>$this->post['department'],
                    'job'=>$this->post['job'],
                    'description'=>$this->post['description'],
                );
                if(isset($this->post['password']) && strlen($this->post['password'])>6 ) {//新密码
                    $update_array['password'] = Model::factory('Admin_User')->hashPassword( $this->post['password'].Model::factory('Admin_User')->getSalt($id));
                }
                $update = Model::factory('Admin_User')->update($id,$update_array);
                if($update) {
                    $new_group_id = array();
                    $groups = array();
                    foreach($this->user_group as $g){
                        $groups[$g['id']] =$g ;
                    }
                    foreach($this->post['group_id'] as $g){
                        if(isset($groups[$g])) {//必须存在的组id
                            $new_group_id[] = intval($g);
                        }
                    }
                    $old_group_id = Model::factory('Admin_Group')->getGroupIdByUserId($id);
                    $add = array_diff($new_group_id,$old_group_id);//增加的
                    $remove = array_diff($old_group_id,$new_group_id);//删除的
                    if($add) {
                        foreach($add as $v){
                            Model::factory('Admin_Group')->setGroupLink($id,$v);
                        }
                    }
                    if($remove) {
                        foreach($remove as $v){
                            Model::factory('Admin_Group')->deleteGroupLink($id,$v);
                        }
                    }
                    $data = Model::factory('Admin_User')->getOne($id);
                    $message = array('type' => 'success', 'message' => '修改成功.');
                }else {
                    $message = array('type' => 'error', 'message' => '修改失败.');
                }
            }else {
                $message = array('type' => 'error', 'message' => '修改失败,请查看是否有必填信息未填.');
            }
        }
        $data['group_id'] = Model::factory('Admin_Group')->getGroupIdByUserId($id);
        Template::factory('Admin/User/Edit',array(
            'message'=>$message,
            'user_group'=>$this->user_group,
            'sessionid' => Model::factory('Admin')->getUserSessArray()['id'],
            'data'=>$data,
        ))->response();
    }

    //删除
    public function action_Delete() {
        $message = NULL;
        $id = isset($this->get['id']) ? intval($this->get['id']) : 0;
        $rs = Model::factory('Admin_User')->getOne($id);
        if (!$rs) {
            Template::factory()->message(
                array(
                    'type' => 'error',
                    'title' => '信息不存在',
                    'message' => '信息不存在或已经被删除.',
                    'back' => TRUE,)
            );
        }
        $del = Model::factory('Admin_User')->delete($id);
        if ($del) {
            Template::factory()->message(
                array(
                    'type' => 'success',
                    'title' => '删除成功',
                    'message' => '管理员:' . $rs['username'] .'('.$rs['email'].')'. ' 被成功删除.',
                    'redirect' => $this->request->referrer() ? $this->request->referrer() : '/' . $this->controller . '/List',
                    'redirect_time' => 3,
                    'back' => FALSE)
            );
        }
        Template::factory()->message(
            array(
                'type' => 'error',
                'title' => '删除失败',
                'message' => '管理员:' . $rs['name'] . ' 删除未成功,请核实或联系技术人员处理.',
                'back' => TRUE,)
        );
    }





}

