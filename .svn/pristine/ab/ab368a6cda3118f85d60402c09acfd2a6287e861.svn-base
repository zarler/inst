<?php
defined('SYSPATH') or die('No direct script access.');

/**
 * Created by PhpStorm.
 * User: majin
 * Date: 18/1/22
 * Time: 上午11:02
 *
 * 提交授信申请
 *
 */
class Controller_Ver1_CreditApply extends AppCore
{

    protected $model;

    public function before()
    {
        parent::before(); // TODO: Change the autogenerated stub
        $this->model['credit_info'] = Model::factory('CreditInfo');

    }


    public function action_Apply()
    {

        if(in_array(App::$_user['credit_auth'], [Model_User::CREDIT_AUTH_BASE_READY, Model_User::CREDIT_AUTH_BASE_VERIFIED, Model_User::CREDIT_AUTH_BASE_BACK]) ||
            (App::$_user['credit_auth'] == Model_User::CREDIT_AUTH_BASE_FAILED && App::$_user['credit_reject_expire'] > 0 && time() > App::$_user['credit_reject_expire'])
        ){
            $choose_model = Model::factory('CreditInfo_Step')->getChooseModel(App::$_token['user_id']);
            if (count($choose_model) < 1) {
                $this->response_json([], "5200", "您需要至少提交一项选填资料");
            }

            $data = $this->model['credit_info']->getByArray(
                [
                    'user_id' => App::$_token['user_id'],
                    'result' => 0,
                ], [], 1);

            if (!empty($data)) {
                $this->response_json([], "5201", "您已经提交记录，请等待审核");

            }


            $db = Database::instance();
            $db->begin();
            try {
                //添加审核记录
                $update_info = [
                    'credit_auth' => (int)Model_User::CREDIT_AUTH_BASE_SUBMITED,
                ];
                $additional = [];
                $pass_time = Model::factory('User_Audit')->getPassTime(App::$_token['user_id']);
                if ($pass_time > 0) {
                    $additional = Model::factory('CreditInfo_Step')->getAdditional(['user_id' => App::$_token['user_id'], 'pass_time' => $pass_time]);
                }

                if (count($additional) > 0) {
                    //补充资料
                    $models = array_column($additional, 'module');
                    $update_info['audit_type'] = Model_User::AUDIT_TYPE_ADD;
                } else {
                    //第一次提交或重新提交
                    $choose_models = array_column($choose_model, 'module');
                    $models = $this->model['credit_info']->getModules($choose_models);
                    $update_info['audit_type'] = Model_User::AUDIT_TYPE_ALL;

                }
                foreach ($models as $v) {
                    if (!$this->model['credit_info']->create(
                        [
                            'user_id' => (int)App::$_token['user_id'],
                            'module' => $v,
                        ])
                    ) {
                        throw new Exception('授信申请插入失败');
                    }
                }


                //修改用户审核状态
                if (App::$_user['credit_auth'] != Model_User::CREDIT_AUTH_BASE_VERIFIED) {
                    if (!Model::factory('User')->update(App::$_token['user_id'], $update_info)
                    ) {
                        throw new Exception('修改用户状态失败');
                    }
                }

                //设备事件采集
                if (in_array(strtolower(App::$id), ['android', 'ios'])) {
                    if (!Model::factory('EquipmentEvent')->create(
                        [
                            'equipment_id' => App::$unique_id,
                            'user_id' => App::$_token['user_id'] > 0 ? App::$_token['user_id'] : 0,
                            'token' => App::$token,
                            'type' => Model_EquipmentEvent::TYPE_CREDIT_INFO,
                            'type2' => Model_EquipmentEvent::TYPE2_CREDIT_INFO,
                            'extend' => [
                                'app' => [
                                    'id' => App::$id,
                                    'os' => App::$os,
                                    'ver' => App::$ver,
                                    'ip' => App::$ip,
                                ],
                            ],
                        ])
                    ) {
                        throw new Exception('事件记录插入失败');

                    }
                }
                $db->commit();
                $this->response_json([], "1000", "提交成功");

            } catch (Exception $e) {
                $db->rollback();
                $this->response_json([$e->getTrace()], "4012", "程序异常请重试");

            }
        }else{
            $this->response_json([], "5513", "用户状态错误");

        }


    }


}
