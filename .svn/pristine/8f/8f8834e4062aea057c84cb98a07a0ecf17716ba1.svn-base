<?php
defined('SYSPATH') or die('No direct script access.');
/**
 * Created by PhpStorm.
 * User: majin
 * Date: 16/4/18
 * Time: 下午10:51
 */
class Controller_Ver1_Token extends AppCore{

    protected $_check_token = FALSE;
    protected $_check_user = FALSE;

    protected $model = NULL;

    public function before() {
        parent::before(); // TODO: Change the autogenerated stub
        $this->model['token'] = Model::factory('Token');
    }


    /**
     * 创建
     */
    public function action_Create(){
        $token =  $this->model['token']->make_token();
        $c=0;
        while($this->model['token']->get_one($token)){
            $c++;
            $token =  $this->model['token']->make_token();
            if($c>3){//碰撞3次失败
                $this->response_json(array(),"4000","token创建失败");
                exit;
            }
        }
        $array = array(
            'token' => $token,
            'app_id' => App::$id,
            'app_ver'=> App::$ver,
            'app_os'=> App::$os,
            'unique_id'=> App::$unique_id,
            'ip'=> App::$ip,
        );
        if($this->model['token']->create($array)){
            $this->response_json(array('token'=>$token,'expire_in'=>Model_Token::NOLOGIN_PERIOD),"1000","token创建成功");
        }else{
            $this->response_json(array(),"4000","token创建失败");
        }

    }


    /**
     * 续约
     */
    public function action_Renew(){
        $this->check_token();
        if(App::$_token['renew_times'] >= Model_Token::RENEW_MAX_TIMES){
                $this->response_json(array(),"2006",'token已达最大续约次数');
        }
        $time_int = time();
        $new_period = 0;
        if($time_int > App::$_token['expire_time']){
            $new_period = $time_int - App::$_token['expire_time'] + Model_Token::RENEW_PERIOD;
        }else{
            $new_period = Model_Token::RENEW_PERIOD;
        }
        $this->model['token']->update(App::$token,
            array(
                'renew_times'=>App::$_token['renew_times']+1,
                'expire_time'=>App::$_token['expire_time'] + $new_period)
        );
        $this->response_json(array('expire_in'=>$new_period),"1000","token续约成功");
    }


    /**
     * 注销
     */
    public function action_Remove(){
        $this->model['token']->update(App::$token,array('status'=>Model_Token::STATUS_REMOVED));
        $this->response_json(array(),"1000","token注销成功");
    }


}