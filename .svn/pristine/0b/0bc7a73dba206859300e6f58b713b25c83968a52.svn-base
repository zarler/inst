<?php
/**
 * Created by PhpStorm.
 * User: wangchao
 * Date: 2018/1/11
 * Time: 下午9:32
 */

class Controller_API_Moxie_Return extends Controller {
    protected $_env =[];
    protected $defier_provider = Model_Defier_Relation::PROVIDER_RONG360;

    public function before() {
        parent::before(); // TODO: Change the autogenerated stub
        $this->_env['url'] = Kohana::$config->load('env')->get('url');
        //echo "exit.";
        //exit;
    }

    /**
     * 第一次回调 已经获得通话记录
     * 通话记录需要异步采集
     */
    public function action_First() {
        $result_token = 'TianJiScore_v21';

        if(!empty($_REQUEST)) {
            $res = TCAPI::factory()
                ->url($this->_env['url']['api'].'/Rong360/CallBack/Detail_NotifyUrl')
                ->post($_REQUEST)
                ->execute()
                ->as_array();

            if(isset($res['api_result']['inoperation']) && $res['api_result']['inoperation']){//inoperation 存在不做任何操作
                $this->response_json([],"1000","success");
            }

            if(is_array($res) && isset($res['status']) && $res['status']==Model_API::COMM_SUCC && isset($res['api_result']['result']) ){

                $check_no = isset($res['api_result']['check_no']) ? $res['api_result']['check_no'] : '';
                $tc_no = isset($res['api_result']['tc_no']) ? $res['api_result']['tc_no'] : '';
                $rs = NULL;
                if($check_no || $tc_no ){
                    $rs  = Model::factory('MNO_QueryRecord')->get_one_by_array(['check_no'=>$check_no]);
                    if(!$rs){
                        $rs = Model::factory('MNO_QueryRecord')->get_one_by_array(['tc_no'=>$tc_no]);
                    }

                }


                if( $res['api_result']['result']==Model_API::RES_SUCC  && isset($res['api_result']['check_no'])){



                    if( Lib::factory('MNO_QueryRecord')->success($check_no,$tc_no,isset($res['api_result']) ? $res['api_result'] : []) ){

                        if($rs){
                            //更新用户的ci_step 表中状态
                            Model::factory('CreditInfo_Step')->change($rs['user_id'], Model_CreditInfo_Step::MNO, Model_CreditInfo_Step::COMPLETE);
                            //设置该记录请求成功,后续可以抓取记录,获取评分
                            Model::factory('MNO_QueryRecord')->update($rs['id'],[
                                'status'=>Model_MNO_QueryRecord::STATUS_SUCCESS,
                                'notify_first_code'=>isset($res['api_result']['result']) ? $res['api_result']['result'] : '',
                                'notify_first_msg'=>isset($res['api_result']['msg']) ? $res['api_result']['msg'] : '' ,
                            ]);
                            //由另一个程序进行电话记录的异步采集工作,不在当前程序中完成。
                            if($rs1 = DB::select('id')->from('rong360_phonebook_collect')->where('tc_no','=',$rs['tc_no'])->execute()->current()){

                            }else{
                                DB::insert('rong360_phonebook_collect',['user_id','tc_no','check_no','create_time'])->values([$rs['user_id'],$rs['tc_no'],$rs['check_no'],time()])->execute();
                            }

                        }

                        //在这里 确认是否进行下一步采集评分决策的需要。 (考虑到未来有些模型有可能不需要运营商采集,可以用其他服务商采集)
                        if( isset($rs['user_id']) && $df = Model::factory('Defier_Relation')->get_one_by_user_id($rs['user_id'])){//挑战渠道绑定RONG360的继续采集获取评分
                            if($df['provider']==$this->defier_provider){
                                $res2 = TCAPI::factory()//通知api继续获取评分
                                ->url($this->_env['url']['api'].'/Rong360/CallBack/Score')
                                    ->post(['tc_no'=> $tc_no,'check_no'=> $check_no])
                                    ->execute()
                                    ->as_array();
                                if(!is_array($res2) || !isset($res2['status']) || $res2['api_result']['result']!=Model_API::RES_SUCC ){
                                    Model::factory('MNO_QueryRecord')->update($rs['id'],[
                                        'status'=>Model_MNO_QueryRecord::STATUS_SECOND_ERROR,
                                        'notify_first_code'=>isset($res2['api_result']['result']) ? $res2['api_result']['result'] : '',
                                        'notify_first_msg'=>isset($res2['api_result']['msg']) ? $res2['api_result']['msg'] : '' ,
                                    ]);
                                }
                            }

                        }else{
                            //没有按挑战者渠道绑定的用户
                            $res2 = TCAPI::factory()//通知api继续获取评分
                            ->url($this->_env['url']['api'].'/Rong360/CallBack/Score')
                                ->post(['tc_no'=> $tc_no,'check_no'=> $check_no])
                                ->execute()
                                ->as_array();
                            if(!is_array($res2) || !isset($res2['status']) || $res2['api_result']['result']!=Model_API::RES_SUCC ){
                                Model::factory('MNO_QueryRecord')->update($rs['id'],[
                                    'status'=>Model_MNO_QueryRecord::STATUS_SECOND_ERROR,
                                    'notify_first_code'=>isset($res2['api_result']['result']) ? $res2['api_result']['result'] : '',
                                    'notify_first_msg'=>isset($res2['api_result']['msg']) ? $res2['api_result']['msg'] : '' ,
                                ]);
                            }
                        }
                        $this->response_json([],"1000","success");

                    }

                }elseif($res['api_result']['result']==Model_API::ER_FAILED  && isset($res['api_result']['check_no'])){

                    if($rs){
                        Model::factory('MNO_QueryRecord')->update($rs['id'],[
                            'notify_first_status'=>Model_MNO_QueryRecord::STATUS_FAILED,
                            'notify_first_code'=>isset($res['api_result']['result']) ? $res['api_result']['result'] : '',
                            'notify_first_msg'=>isset($res['api_result']['msg']) ? $res['api_result']['msg'] : '' ,
                        ]) ;

                        if($xgrs = Model::factory('Rong360_XiGua')->get_short_one_by_user_id($rs['user_id'],$result_token)){
                            //有记录就不更新
                        }else{
                            Model::factory('Rong360_XiGua')->add_short(['user_id' => $xgrs['user_id'], 'result' => -1, 'module' => $result_token, 'create_time' => time()]);
                        }
                        $this->response_json([],"1000","success");

                    }

                }

            }


        }
        $this->response_json([],"4000","failed");

    }


    /**
     * 第二次回调 获得西瓜分
     * 通话记录需要异步采集
     */
    public function action_Second() {
        $result_token = 'TianJiScore_v21';
        if(!empty($_REQUEST)) {
            $res = TCAPI::factory()
                ->url($this->_env['url']['api'].'/Rong360/CallBack/NotifyUrl')
                ->post($_REQUEST)
                ->execute()
                ->as_array();

            if(isset($res['api_result']['inoperation']) && $res['api_result']['inoperation']){//inoperation 存在不做任何操作
                $this->response_json([],"1000","success");
            }

            if(is_array($res) && isset($res['status']) && $res['status']==Model_API::COMM_SUCC && isset($res['api_result']['result']) ){


                if( $res['api_result']['result']==Model_API::RES_SUCC  && isset($res['api_result']['check_no'])){

                    $check_no = $res['api_result']['check_no'];
                    $tc_no = $res['api_result']['tc_no'];
                    //就西瓜分与新西瓜分v21 差别 一个是  0.xxxxxxxxxxx 另一个是 300~900之间
                    //$xigua_score = bcmul($res['api_result']['score'],1000000000);
                    $xigua_score = intval($res['api_result']['scorev21']);
                    $xigua_json = $res['api_result']['json'];

                    $rs  = Model::factory('MNO_QueryRecord')->get_one_by_array(['check_no'=>$check_no]);
                    if(!$rs){
                        $rs = Model::factory('MNO_QueryRecord')->get_one_by_array(['tc_no'=>$tc_no]);
                    }
                    if($rs){
                        //更新用户的ci_step 表中状态
                        Model::factory('CreditInfo_Step')->change($rs['user_id'], Model_CreditInfo_Step::MNO, Model_CreditInfo_Step::COMPLETE);
                        //设置该记录请求成功,获取评分
                        Model::factory('MNO_QueryRecord')->update($rs['id'],[
                            'status'=>Model_MNO_QueryRecord::STATUS_SUCCESS,
                            'notify_second_code'=>isset($res['api_result']['result']) ? $res['api_result']['result'] : '',
                            'notify_second_msg'=>isset($res['api_result']['msg']) ? $res['api_result']['msg'] : '' ,
                        ]);
                        //由另一个程序进行电话记录的异步采集工作,不在当前程序中完成。

                        if($xgrs = Model::factory('Rong360_XiGua')->get_short_one_by_user_id($rs['user_id'],$result_token)){
                            //有记录就更新
                            if( ($xgrs['result']>0 && $xgrs['result']>$xigua_score)  || $xgrs['result']==-1){
                                Model::factory('Rong360_XiGua')->edit_short($xgrs['id'],['result'=>$xigua_score]);
                            }
                            Model::factory('Rong360_XiGua')->add_rong360_data(['user_id' => $xgrs['user_id'], 'module' => $result_token, 'score' => $xigua_score, 'request_data' => json_encode($_REQUEST), 'response_data' => $xigua_json, 'create_time' => time()]);
                        }else{
                            Model::factory('Rong360_XiGua')->add_short(['user_id' => $rs['user_id'], 'result' => $xigua_score, 'module' => $result_token, 'create_time' => time()]);
                            Model::factory('Rong360_XiGua')->add_rong360_data(['user_id' => $xgrs['user_id'], 'module' => $result_token, 'score' => $xigua_score, 'request_data' => json_encode($_REQUEST), 'response_data' => $xigua_json, 'create_time' => time()]);
                        }

                    }
                    $this->response_json([],"1000","success");


                }elseif($res['api_result']['result']==Model_API::ER_FAILED  && isset($res['api_result']['check_no'])){
                    $check_no = $res['api_result']['check_no'];
                    $tc_no = $res['api_result']['tc_no'];

                    $rs  = Model::factory('MNO_QueryRecord')->get_one_by_array(['check_no'=>$check_no]);
                    if(!$rs){
                        $rs = Model::factory('MNO_QueryRecord')->get_one_by_array(['tc_no'=>$tc_no]);
                    }
                    if($rs){
                        $steprs = Model::factory('CreditInfo_Step')->get_one($rs['user_id']);
                        if($steprs[Model_CreditInfo_Step::MNO] != Model_CreditInfo_Step::COMPLETE){
                            //更新用户的ci_step 表中状态
                            Model::factory('CreditInfo_Step')->change($rs['user_id'], Model_CreditInfo_Step::MNO, Model_CreditInfo_Step::COMPLETE);
                        }
                        //设置该记录请求成功,获取评分
                        Model::factory('MNO_QueryRecord')->update($rs['id'],[
                            'status'=>Model_MNO_QueryRecord::STATUS_FAILED,
                            'notify_second_code'=>isset($res['api_result']['result']) ? $res['api_result']['result'] : '',
                            'notify_second_msg'=>isset($res['api_result']['msg']) ? $res['api_result']['msg'] : '' ,
                        ]);
                        //由另一个程序进行电话记录的异步采集工作,不在当前程序中完成。

                        if($xgrs = Model::factory('Rong360_XiGua')->get_short_one_by_user_id($rs['user_id'],$result_token)){
                            //有记录不更新
                        }else{
                            Model::factory('Rong360_XiGua')->add_short(['user_id' => $xgrs['user_id'], 'result' => -1, 'module' => $result_token, 'create_time' => time()]);
                        }

                    }


                    if( Lib::factory('MNO_QueryRecord')->update_status($check_no,$tc_no,Model_MNO_QueryRecord::STATUS_FAILED) ){
                        $this->response_json([],"1000","success");
                    }

                }

            }


        }
        $this->response_json([],"4000","failed");


    }



    /**
     * 返回查询(倒计时查询)
     *
     * API 返回例子
    {
    "status": true,
    "msg": "查询成功",
    "api_result": {
    "tc_no": "22222222",
    "check_no": "TC20171107170952w4gsG1",
    "result": "0000",
    "extents": "333"
    }
    }
     */
    //app或h5端返回需要检测用户
    public function action_AppQuery(){

        //$response_array['query_result'] = 'unknown';
        //$this->response_json($response_array,"1000","查询成功");

        $response_array = [];
        if(!empty($_REQUEST)) {
            $res = TCAPI::factory()
                ->url($this->_env['url']['api']. '/Rong360/GetTcNo')
                ->post(['outUniqueId'=>$_REQUEST['outUniqueId']])
                ->execute()
                ->as_array();
            if(is_array($res) && isset($res['status']) && $res['status']==Model_API::COMM_SUCC && isset($res['api_result']['result']) ) {

                if ($res['api_result']['result'] == Model_API::RES_SUCC && isset($res['api_result']['tc_no'])) {
                    $check_no = $res['api_result']['check_no'];
                    $tc_no = $res['api_result']['tc_no'];

                    $rs  = Model::factory('MNO_QueryRecord')->get_one_by_array(['check_no'=>$check_no]);
                    if(!$rs){
                        $rs = Model::factory('MNO_QueryRecord')->get_one_by_array(['tc_no'=>$tc_no]);
                    }
                    if($rs){
                        $ci_step = Model::factory('User')->get_ci_step($rs['user_id']);
                        if(isset($ci_step['mno']) && $ci_step['mno']==Model_CreditInfo_Step::COMPLETE ){
                            $response_array['query_result'] = 'pass';
                            $this->response_json($response_array,"1000","查询成功");
                        }else{
                            $response_array['query_result'] = 'unknown';
                            $this->response_json($response_array,"1000","查询成功");
                        }
                    }
                }else{
                    $this->response_json([],"4000","流水号查询失败");
                }

            }else{
                $this->response_json([],"4000","接口异常");

            }
        }else{
            $this->response_json([],"4006","参数错误");
        }
    }




    //格式化JSON返回
    public function response_json($result,$code=TRUE,$message=NULL){
        $time_string = date('Y-m-d H:i:s');
        $data = array(
            'code' => $code,
            'message' => $message ? $message : '',

            'result' => $result,
            'service' => array(
                'time'=> $time_string,
            )
        );

        $json = json_encode($data);

        header('Content-type: application/json');
        echo $json;
        ob_flush();
        exit;

    }




}