<?php
defined('SYSPATH') or die('No direct script access.');
/**
 * Created by PhpStorm.
 * User: majin
 * Date: 16/5/31
 * Time: 上午11:11
 * 配置信息
 */
class Controller_Ver2_Settings extends AppCore{

    protected $_check_token = FALSE;
    protected $_check_user = FALSE;

    protected $_settings = array();//配置数组


    public function before() {
        parent::before(); // TODO: Change the autogenerated stub

        //CACHE ----[BEGIN]
        $ca = Lib::factory('TCCache_Settings')->uri(Request::current()->uri())->get();//CACHE GET
        if($ca){
            $response_array =$ca;
            //appv2.4.1基础授信未通过的用户强制升级
            $this->mno_must_upgrade($response_array);
            $this->response_json($response_array,"1000","预制配置");
        }
        //CACHE ----[END]
    }


    protected function common(){
        //银行列表
        $bank = Model::factory('Bank')->get_all(Model_Bank::STATUS_VALID);
        if($bank){
            $this->_settings['bank'] = $bank;
        }

        //
        $audit_rate = Model::factory('Config')->get_audit_rate();
        if($audit_rate){
            $this->_settings['audit_rate'] = $audit_rate;
        }

        //借款阈值 2017-2-17已经有多种产品对应多种金额配置,此处金额已经不能满足需求,新的产品配置信息已经由ChargeMap AppHome Product 取代。
        $this->_settings['loan_rule'] = array(
            'max_amount' => Def::MAX_AMOUNT,    //系统最大额度
            'min_amount' => Def::MIN_AMOUNT,    //系统最小金额
            'unit' => Def::LOAN_UNIT,           //系统借款最小单位(借款幅度)
            'max_day' => Def::MAX_DAY,          //系统最大借款天数
            'min_day' => Def::MIN_DAY,          //系统最小借款天数
        );

        $this->_settings['show_credit_option'] = Def::SHOW_CREDIT_OPTION;//信用项目显示开关

        $this->_settings['verify_code'] = Def::VERIFY_CODE;//验证码开关

        $this->_settings['contact_phone'] = '010-56592060';


    }




    /**
     *  公用
     */
    public function action_Index(){
        $this->common();
        Lib::factory('TCCache_Settings')->uri(Request::current()->uri())->set($this->_settings);//CACHE ----- [WRITE]

        $this->_settings['_db_read'] = "1";
        $this->response_json($this->_settings,"1000","预制配置");
    }



    /**
     *  android
     */
    public function action_Android(){
        $this->common();
        $config = Kohana::$config->load('app')->get('android');
        $ver = isset($config['ver']) ? $config['ver']:'1.0' ;
        $update = isset($config['update']) ? $config['update']:'' ;
        $install = isset($config['install']) ? $config['install']:NULL ;
        $must_upgrade = isset($config['must_upgrade']) ? (string)$config['must_upgrade']:'0' ;
        $this->_settings['app']['ver'] = $ver;
        $this->_settings['app']['update'] = $update;
        $this->_settings['app']['must_upgrade'] = $must_upgrade;
        if($install){
            $this->_settings['app']['install'] = $install;
        }

        Lib::factory('TCCache_Settings')->uri(Request::current()->uri())->set($this->_settings);//CACHE ----- [WRITE]

        $this->_settings['_db_read'] = "1";
        $this->response_json($this->_settings,"1000","预制配置");
    }



    /**
     *  ios
     */
    public function action_IOS(){
        $this->common();
        $config = Kohana::$config->load('app')->get('ios');
        $ver = isset($config['ver']) ? $config['ver']:'1.0' ;
        $develop_ver = isset($config['develop_ver']) ? $config['develop_ver']:$ver ;
        $update = isset($config['update']) ? $config['update']:'' ;
        $install = isset($config['install']) ? $config['install']:NULL ;
        $must_upgrade = isset($config['must_upgrade']) ? (string)$config['must_upgrade']:'0' ;
        $this->_settings['app']['ver'] = $ver;
        $this->_settings['app']['update'] = $update;
        $this->_settings['app']['must_upgrade'] = $must_upgrade;
        $this->_settings['app']['develop_ver'] = $develop_ver;
        if($install){
            $this->_settings['app']['install'] = $install;
        }

        Lib::factory('TCCache_Settings')->uri(Request::current()->uri())->set($this->_settings);//CACHE ----- [WRITE]

        $this->_settings['_db_read'] = "1";
        $this->response_json($this->_settings,"1000","预制配置");
    }





    /**
     *  微信
     */
    public function action_Wechat(){
        $this->common();
        Lib::factory('TCCache_Settings')->uri(Request::current()->uri())->set($this->_settings);//CACHE ----- [WRITE]

        $this->_settings['_db_read'] = "1";
        $this->response_json($this->_settings,"1000","预制配置");
    }





    /**
     * 检查用户是否需要强制升级
     * app v2.4.1 以后才支持Settings 请求里带TOKEN
     */
    protected function mno_must_upgrade(&$response_array){
        return FALSE;//暂时先不处理,等APP 2.4.1上线以后再放开
        if(isset(App::$_token['user_id']) && App::$_token['user_id']>0 && isset(App::$_user['credit_auth'])){
            if(App::$ver<'2.4.1' &&  in_array(strtolower(App::$id),['android','ios'])) {
                if( in_array(App::$_user['credit_auth'],[
                    Model_User::CREDIT_AUTH_BASE_READY,
                    Model_User::CREDIT_AUTH_BASE_ONSUBMIT,
                    Model_User::CREDIT_AUTH_BASE_SUBMITED,
                    Model_User::CREDIT_AUTH_BASE_CHECKING,
                    Model_User::CREDIT_AUTH_BASE_FAILED,
                    Model_User::CREDIT_AUTH_BASE_BACK,
                ])){
                    $response_array['app']['must_upgrade'] = '1';
                    $this->_settings['app']['ver'] = '2.4.1';
                }
            }
        }
        return $response_array;
    }



}