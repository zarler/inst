<?php
defined('SYSPATH') or die('No direct script access.');

/**
 * Created by PhpStorm.
 * User: majin
 * Date: 16/1/28
 * Time: 下午5:19
 *
 * 短信模板管理
 */
class Controller_SMS extends AdminController
{

    protected $permission_array = array(

        'map' => array(
            'List' => array('Add', 'Edit'),
        ),

    );

    public function before()
    {
        parent::before(); // TODO: Change the autogenerated stub
    }


    public function action_List()
    {
        $page = isset($this->get['page']) ? intval($this->get['page']) : 1;
        $perpage = isset($this->get['pagesize']) ? intval($this->get['pagesize']) : 20;
        $array = array();

        if (isset($this->get['title']) && $this->get['title']) {
            $array['title'] = trim($this->get['title']);
        }
        if (isset($this->get['code']) && $this->get['code']) {
            $array['code'] = trim($this->get['code']);
        }
        if (isset($this->get['provider_id']) && $this->get['provider_id']) {
            $array['provider_id'] = trim($this->get['provider_id']);
        }
        if (isset($this->get['type']) && $this->get['type']) {
            $array['type'] = trim($this->get['type']);
        }
        if (isset($this->get['status']) && $this->get['status']) {
            $array['status'] = trim($this->get['status']);
        }

        $total = Model::factory('SMS')->getTotal($array);
        $pagination = Pagination::factory(
            array(
                'total_items' => $total,
                'items_per_page' => $perpage,
            ));
        $list = Model::factory('SMS')->getList($array, $perpage, $page);

        Template::factory('SMS/List', array(
                'list' => $list,
                'pagination' => $pagination,
                'providers' => Model::factory('SMS_Provider')->getAll(),
                '_status' => Model::factory('SMS')->status_array,
                '_types' => Model::factory('SMS')->types_array,
            )
        )->response();

    }


    //添加
    public function action_Add()
    {
        $message = null;
        if (isset($this->post['submit'])) {
            $title = mb_substr($this->post['title'], 0, 25);
            $code = mb_substr($this->post['code'], 0, 25);
            $body = mb_substr($this->post['body'], 0, 255);
            $provider_id = intval($this->post['provider_id']);
            $status = intval($this->post['status']);
            $type = intval($this->post['type']);

            $new_id = Model::factory('SMS')->create(array(
                'title' => $title,
                'code' => $code,
                'body' => $body,
                'status' => $status,
                'type' => $type,
                'provider_id' => $provider_id,
            ));
            if ($new_id) {
                $message = array('type' => 'success', 'message' => '添加成功.');
                $this->admin()->opterationLog('添加短信模板  ID:' . $new_id . ' 名称:' . $title);
            } else {
                $message = array('type' => 'error', 'message' => '添加失败.,请查看是否有必填信息未填.');
            }
        }

        Template::factory('SMS/Add', array(
            'message' => $message,
            'providers' => Model::factory('SMS_Provider')->getAll(),
            '_status' => Model::factory('SMS')->status_array,
            '_types' => Model::factory('SMS')->types_array,
        ))->response();

    }


    public function action_Edit()
    {
        $message = null;
        $id = isset($this->get['id']) ? intval($this->get['id']) : 0;
        $data = Model::factory('SMS')->getOne($id);
        if (!$data) {
            Template::factory()->message(
                array(
                    'type' => 'error',
                    'title' => '信息不存在',
                    'message' => '信息不存在或已经被删除.',
                    'back' => true,
                )
            );
        }

        if (isset($this->post['submit_delete']) && $this->post['submit_delete']) {
            $update_array = array('status' => Model_SMS::DELETED);
            $update = Model::factory('SMS')->update($id, $update_array);
            if ($update) {
                $this->admin()->opterationLog('取消(删除)短信模板 ID:' . $id, trim($this->post['admin_log_message']));
                $data = Model::factory('SMS')->getOne($id);
                $message = array('type' => 'success', 'message' => '操作成功.');
            } else {
                $message = array('type' => 'error', 'message' => '操作失败.');
            }
        } elseif (isset($this->post['submit']) && $this->post['submit']) {
            $title = mb_substr($this->post['title'], 0, 25);
            $code = mb_substr($this->post['code'], 0, 25);
            $body = mb_substr($this->post['body'], 0, 255);
            $status = intval($this->post['status']);
            $type = intval($this->post['type']);

            $provider_id = intval($this->post['provider_id']);
            $update_array = array(
                'title' => $title,
                'code' => $code,
                'body' => $body,
                'status' => $status,
                'type' => $type,
                'provider_id' => $provider_id,
            );
            $update = Model::factory('SMS')->update($id, $update_array);
            if ($update) {
                $this->admin()->opterationLog('更改短信模板 ID' . $id, trim($this->post['admin_log_message']));
                $data = Model::factory('SMS')->getOne($id);
                $message = array('type' => 'success', 'message' => '更改成功.');
            } else {
                $message = array('type' => 'error', 'message' => '更改失败.');
            }
        }

        Template::factory('SMS/Edit', array(
            'message' => $message,
            '_types' => Model::factory('SMS')->types_array,
            '_status' => Model::factory('SMS')->status_array,
            'providers' => Model::factory('SMS_Provider')->getAll(),
            'data' => $data,
        ))->response();
    }

}
